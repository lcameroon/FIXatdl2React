{"version":3,"sources":["FIXatdl/components/SingleSpinner_t.tsx","FIXatdl/AtdlControl.tsx","FIXatdl/components/CheckBoxList_t.tsx","FIXatdl/components/CheckBox_t.tsx","FIXatdl/components/Clock_t.tsx","FIXatdl/components/DropDownList_t.tsx","FIXatdl/components/EditableDropDownList_t.tsx","FIXatdl/components/DoubleSpinner_t.tsx","FIXatdl/components/HiddenField_t.tsx","FIXatdl/components/Label_t.tsx","FIXatdl/components/MultiSelectList_t.tsx","FIXatdl/components/RadioButtonList_t.tsx","FIXatdl/components/RadioButton_t.tsx","FIXatdl/components/SingleSelectList_t.tsx","FIXatdl/components/Slider_t.tsx","FIXatdl/components/TextField_t.tsx","FIXatdl/index.tsx","FIXatdl/utility/model.utils.ts","FIXatdl/resource/atdl-simple-example.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["SingleSpinner_t","props","params","isPercent","type","isFloat","min","undefined","max","step","minValue","Number","replace","maxValue","precision","parser","value","formatter","controlType","CheckBoxList_t","CheckBox_t","Clock_t","format","showTime","DropDownList_t","EditableDropDownList_t","DoubleSpinner_t","HiddenField_t","Label_t","MultiSelectList_t","RadioButtonList_t","RadioButton_t","SingleSelectList_t","Slider_t","TextField_t","AtdlControl","React","forwardRef","ref","Component","control","id","onChange","field","listItems","FIXatdl","atdlJson","atdl","JSON","parse","error","Widget","Form","useForm","form","useState","state","setState","Option","Select","Strategy","Strategies","isArray","initialValues","buildInitialValues","useCallback","setFieldsValue","fixMsgType","providerID","uiRep","version","wireValue","panels","console","log","useEffect","style","borderColor","bordered","hoverable","title","extra","MoreOutlined","Item","label","placeholder","defaultValue","map","idx","_attributes","key","name","labelCol","span","wrapperCol","onFinish","val","values","getFieldsValue","newValues","parseFormValues","hidden","List","panelsFieldList","controlsFieldList","fields","currentPanel","currentStrategy","offset","marginBottom","paddingBottom","htmlType","ControlsFieldList","controls","_params","_listItems","parameterRef","rules","required","message","initValues","forEach","strategy","Parameter","StrategyPanel","StrategyLayout","strategyPanel","push","Control","ListItem","getParams","result","find","flattenDeep","flat","Convert","json","typ","transform","jsonToJSProps","stringify","jsToJSONProps","xml","xml2json","compact","spaces","invalidValue","Error","jsonToJS","p","js","jsToJSON","getProps","typeMap","Array","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","Date","d","isNaN","valueOf","transformDate","transformPrimitive","arrItems","obj","Atdl","ParameterElement","EnumPair","EnumPairAttributes","PurpleAttributes","PurpleParameter","FluffyAttributes","Regions","Region","RegionAttributes","StrategyEdit","StrategyEditEdit","EditElement","TentacledAttributes","StickyAttributes","StrategyEditAttributes","StrategyLayoutStrategyPanel","StrategyPanelStrategyPanel","ListItemAttributes","ControlAttributes","StrategyPanelAttributes","StrategyAttributes","StrategiesAttributes","Use","sampleFIXatdl","ValidateOutput","onSubmit","marginTop","gutter","onClick","block","readOnly","FIXatdlTexarea","TextArea","Input","height","App","setJson","setXml","setXml2Json","toJson","Header","color","Content","padding","overflow","maxWidth","margin","width","event","target","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d6d10200.chunk.js","sourcesContent":["import React from 'react';\nimport { InputNumber } from 'antd';\n\nimport { ControlProps } from '../AtdlControl';\n\nexport const SingleSpinner_t: React.FC<ControlProps> = (props) => {\n  const { params } = props;\n  const isPercent = params?.type === 'Percentage_t';\n  const isFloat = params?.type === 'Float_t';\n  let min = isPercent ? 1 : undefined;\n  let max = isPercent ? 100 : undefined;\n  let step = 1;\n\n  if (isPercent) {\n    if (params?.minValue) {\n      min = Number(params?.minValue.replace('.', ''));\n    }\n    if (params?.maxValue) {\n      max = Number(params?.maxValue.replace('.', ''));\n    }\n  }\n  if (isFloat) {\n    if (params?.precision === '2') {\n      step = 0.01;\n    }\n  }\n  return (\n    <InputNumber\n      {...props}\n      min={min}\n      max={max}\n      step={step}\n      parser={isPercent ? (value: any) => value.replace('%', '') : (value: any) => value}\n      formatter={(value) => (isPercent ? `${value}%` : `${value}`)}\n    />\n  );\n};\n","import React from 'react';\n\nimport {\n  CheckBoxList_t,\n  CheckBox_t,\n  Clock_t,\n  DoubleSpinner_t,\n  DropDownList_t,\n  EditableDropDownList_t,\n  HiddenField_t,\n  Label_t,\n  MultiSelectList_t,\n  RadioButtonList_t,\n  RadioButton_t,\n  SingleSelectList_t,\n  SingleSpinner_t,\n  Slider_t,\n  TextField_t,\n} from './components';\n\nimport { ControlAttributes, ParameterElement } from './model/atdl';\n\ninterface AntdListField {\n  key: number;\n  name: number;\n  isListField?: boolean;\n  fieldKey?: number;\n}\nexport interface ControlProps {\n  id?: string;\n  value?: any;\n  ref?: any;\n  onChange?: (value: any) => {};\n  control: ControlAttributes;\n  field?: AntdListField;\n  params?: ParameterElement['_attributes'];\n  listItems?: any[];\n}\n\ninterface ControlType {\n  [key: string]: React.ComponentType<ControlProps>;\n}\n\nconst controlType: ControlType = {\n  CheckBoxList_t,\n  CheckBox_t,\n  Clock_t,\n  DropDownList_t,\n  EditableDropDownList_t,\n  DoubleSpinner_t,\n  HiddenField_t,\n  Label_t,\n  MultiSelectList_t,\n  RadioButtonList_t,\n  RadioButton_t,\n  SingleSelectList_t,\n  SingleSpinner_t,\n  Slider_t,\n  TextField_t,\n};\n\nexport const AtdlControl: React.FC<ControlProps> = React.forwardRef((props, ref) => {\n  const Component = controlType[props.control.type];\n\n  return (\n    <Component\n      id={props.id}\n      value={props.value}\n      onChange={props.onChange}\n      field={props.field}\n      control={props.control}\n      params={props.params}\n      listItems={props.listItems}\n    />\n  );\n});\n","import React from 'react';\n\nexport const CheckBoxList_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const CheckBox_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n// import moment from 'moment';\nimport { DatePicker } from 'antd';\n\nimport { ControlProps } from '../AtdlControl';\n\nexport const Clock_t: React.FC<ControlProps> = (props) => (\n  <DatePicker {...props} format=\"DD/MM/YYYY HH:mm:ss\" showTime />\n);\n","import React from 'react';\n\nexport const DropDownList_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const EditableDropDownList_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nimport { SingleSpinner_t as DoubleSpinner } from './SingleSpinner_t';\nimport { ControlProps } from '../AtdlControl';\n\nexport const DoubleSpinner_t: React.FC<ControlProps> = (props) => {\n  return <DoubleSpinner {...props} />;\n};\n","import React from 'react';\n\nexport const HiddenField_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const Label_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const MultiSelectList_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const RadioButtonList_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const RadioButton_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const SingleSelectList_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const Slider_t = () => {\n  return <div></div>;\n};\n","import React from 'react';\n\nexport const TextField_t = () => {\n  return <div></div>;\n};\n","import React, { Fragment, useState, useEffect, useCallback } from 'react';\nimport { find, isArray, flattenDeep } from 'lodash';\nimport { Input, Card, Form, Select, Button, Divider } from 'antd';\nimport { MoreOutlined } from '@ant-design/icons';\n\nimport { AtdlControl } from './AtdlControl';\n\nexport const FIXatdl = ({ atdlJson = '' }) => {\n  let atdl: any = {};\n\n  try {\n    atdl = atdlJson && JSON.parse(atdlJson);\n  } catch {\n    atdl = { error: 'Error!!!' };\n  }\n  return atdl.error ? <p>{atdl.error}</p> : atdl && <Widget atdl={atdl} />;\n};\n\nconst Widget = ({ atdl }: any) => {\n  const [form] = Form.useForm();\n  const [state, setState] = useState(0);\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const { Option } = Select;\n\n  const { Strategies } = atdl;\n  let { Strategy } = Strategies;\n  Strategy = isArray(Strategy) ? Strategy : [Strategy];\n  const initialValues = buildInitialValues(Strategy);\n\n  const onFinish = (val?: any) => {\n    const values = val || form.getFieldsValue();\n    const newValues = parseFormValues(values);\n    console.log('Received values of form:', newValues);\n  };\n\n  const onChange = useCallback(\n    (value: any) => {\n      setState(value);\n      form.setFieldsValue({\n        fixMsgType: initialValues[value].fixMsgType,\n        providerID: initialValues[value].providerID,\n        uiRep: initialValues[value].uiRep,\n        version: initialValues[value].version,\n        wireValue: initialValues[value].wireValue,\n        panels: initialValues[value].panels,\n      });\n      console.log('initialValues', initialValues);\n    },\n    [form, initialValues]\n  );\n\n  useEffect(() => {\n    onChange(state);\n  }, [atdl, onChange, state]);\n\n  return (\n    <Card\n      style={{ borderColor: '#d9d9d9' }}\n      bordered\n      hoverable\n      type=\"inner\"\n      title=\"Order Widget\"\n      extra={<MoreOutlined />}>\n      <Form.Item label=\"Strategy\">\n        <Select\n          placeholder=\"Select a strategy\"\n          defaultValue={Number(state)}\n          onChange={onChange}>\n          {Strategy.map(({ _attributes }: any, idx: number) => (\n            <Option key={idx} value={idx}>\n              {_attributes.name}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form\n        {...layout}\n        initialValues={initialValues[state]}\n        form={form}\n        name=\"control-hooks\"\n        onFinish={onFinish}>\n        <Form.Item name=\"fixMsgType\" hidden>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"providerID\" hidden>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"uiRep\" hidden>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"version\" hidden>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"wireValue\" hidden>\n          <Input />\n        </Form.Item>\n        <Form.List name=\"panels\">\n          {(panelsFieldList) => (\n            <Fragment>\n              {panelsFieldList.map((field) => (\n                <Fragment key={field.key}>\n                  <Divider />\n                  <Form.List name={[field.name, 'controls']}>\n                    {(controlsFieldList) => (\n                      <ControlsFieldList\n                        fields={controlsFieldList}\n                        initialValues={initialValues}\n                        currentPanel={field.key}\n                        currentStrategy={state}\n                      />\n                    )}\n                  </Form.List>\n                </Fragment>\n              ))}\n            </Fragment>\n          )}\n        </Form.List>\n        <Form.Item\n          wrapperCol={{ span: 16, offset: 8 }}\n          style={{ marginBottom: 0, paddingBottom: 0 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n};\n\nconst ControlsFieldList = ({\n  fields,\n  initialValues,\n  currentStrategy,\n  currentPanel,\n}: any) => (\n  <Fragment>\n    {fields.map((field: any, idx: number) => {\n      const { _attributes, _params, _listItems } = initialValues[currentStrategy].panels[\n        currentPanel\n      ].controls[idx];\n      return (\n        <Form.Item\n          {...field}\n          name={[field.name, _attributes.parameterRef]}\n          label={_attributes.label}\n          rules={[\n            {\n              required: true,\n              message: `${_attributes.parameterRef} is required`,\n            },\n          ]}>\n          <AtdlControl\n            field={field}\n            control={_attributes}\n            params={_params}\n            listItems={_listItems}\n          />\n        </Form.Item>\n      );\n    })}\n  </Fragment>\n);\n\nexport const buildInitialValues = (Strategy: any) => {\n  const initValues: any[] = [];\n  Strategy.forEach((strategy: any) => {\n    const {\n      _attributes,\n      Parameter,\n      StrategyLayout: { StrategyPanel },\n    } = strategy;\n    let strategyPanel: any[] = StrategyPanel;\n    if (StrategyPanel.StrategyPanel) {\n      strategyPanel = [StrategyPanel.StrategyPanel];\n    }\n    strategyPanel = isArray(strategyPanel) ? strategyPanel : [strategyPanel];\n\n    initValues.push({\n      ..._attributes,\n      panels: strategyPanel.map(({ Control }) => {\n        return {\n          controls: Control.map(({ _attributes, ListItem = [] }: any) => {\n            const _params = getParams(_attributes.parameterRef, Parameter);\n            const _listItems = ListItem.map(({ _attributes }: any) => _attributes);\n            const value: any = _params?.type === 'Percentage_t' ? 1 : undefined;\n            return {\n              [_attributes.parameterRef]: value,\n              _attributes,\n              _params,\n              _listItems,\n            };\n          }),\n        };\n      }),\n    });\n  });\n  return initValues;\n};\n\nexport const getParams = (parameterRef: string, Parameter: any) => {\n  const params = isArray(Parameter) ? Parameter : [Parameter];\n  const result = find(params, ['_attributes.name', parameterRef]);\n  return result?._attributes || {};\n};\n\nconst parseFormValues = (values: any) => {\n  const controls = flattenDeep(\n    values.panels.map(({ controls }: any) =>\n      controls.map((control: any) => control).flat()\n    )\n  );\n  return {\n    strategy: {\n      fixMsgType: values.fixMsgType,\n      providerID: values.providerID,\n      uiRep: values.uiRep,\n      version: values.version,\n      wireValue: values.wireValue,\n    },\n    controls,\n  };\n};\n","import parser from 'xml-js';\n\nimport { Atdl } from '../model/atdl';\n\n// To parse this data:\n//\n//   import { Convert } from \"./model.utils\";\n//\n//   const atdl = Convert.toAtdl(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\nexport class Convert {\n  public static toAtdl(json: string): Atdl {\n    return cast(JSON.parse(json), ref('Atdl'));\n  }\n\n  public static atdlToJson(value: Atdl): string {\n    return JSON.stringify(uncast(value, ref('Atdl')), null, 2);\n  }\n\n  public static toJson(xml: string): string {\n    xml = xml.replace(/(xsi:|lay:|val:)/g, '');\n    return parser.xml2json(xml, { compact: true, spaces: 2 });\n  }\n}\n\nfunction invalidValue(typ: any, val: any): never {\n  throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`);\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue('array', val);\n    return val.map((el) => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue('Date', val);\n    }\n    return d;\n  }\n\n  function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n    if (val === null || typeof val !== 'object' || Array.isArray(val)) {\n      return invalidValue('object', val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach((key) => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps);\n    });\n    Object.getOwnPropertyNames(val).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps);\n      }\n    });\n    return result;\n  }\n\n  if (typ === 'any') return val;\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val);\n  }\n  if (typ === false) return invalidValue(typ, val);\n  while (typeof typ === 'object' && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === 'object') {\n    return typ.hasOwnProperty('unionMembers')\n      ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty('arrayItems')\n      ? transformArray(typ.arrayItems, val)\n      : typ.hasOwnProperty('props')\n      ? transformObject(getProps(typ), typ.additional, val)\n      : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== 'number') return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction arrItems(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction unionMembers(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction obj(props: any[], additional: any) {\n  return { props, additional };\n}\n\n// function m(additional: any) {\n//   return { props: [], additional };\n// }\n\nfunction ref(name: string) {\n  return { ref: name };\n}\n\nconst typeMap: any = {\n  Atdl: obj(\n    [\n      {\n        json: 'Strategies',\n        js: 'Strategies',\n        typ: unionMembers(undefined, ref('Strategies')),\n      },\n    ],\n    false\n  ),\n  Strategies: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('StrategiesAttributes')),\n      },\n      {\n        json: 'Strategy',\n        js: 'Strategy',\n        typ: unionMembers(undefined, arrItems(ref('Strategy'))),\n      },\n    ],\n    false\n  ),\n  Strategy: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('StrategyAttributes')),\n      },\n      { json: 'Regions', js: 'Regions', typ: unionMembers(undefined, ref('Regions')) },\n      {\n        json: 'Parameter',\n        js: 'Parameter',\n        typ: unionMembers(\n          undefined,\n          unionMembers(arrItems(ref('ParameterElement')), ref('PurpleParameter'))\n        ),\n      },\n      {\n        json: 'StrategyLayout',\n        js: 'StrategyLayout',\n        typ: unionMembers(undefined, ref('StrategyLayout')),\n      },\n      {\n        json: 'StrategyEdit',\n        js: 'StrategyEdit',\n        typ: unionMembers(undefined, ref('StrategyEdit')),\n      },\n    ],\n    false\n  ),\n  ParameterElement: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('PurpleAttributes')),\n      },\n      {\n        json: 'EnumPair',\n        js: 'EnumPair',\n        typ: unionMembers(undefined, arrItems(ref('EnumPair'))),\n      },\n    ],\n    false\n  ),\n  EnumPair: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('EnumPairAttributes')),\n      },\n    ],\n    false\n  ),\n  EnumPairAttributes: obj(\n    [\n      { json: 'wireValue', js: 'wireValue', typ: unionMembers(undefined, '') },\n      { json: 'enumID', js: 'enumID', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  PurpleAttributes: obj(\n    [\n      { json: 'type', js: 'type', typ: unionMembers(undefined, '') },\n      { json: 'name', js: 'name', typ: unionMembers(undefined, '') },\n      { json: 'fixTag', js: 'fixTag', typ: unionMembers(undefined, '') },\n      { json: 'use', js: 'use', typ: unionMembers(undefined, ref('Use')) },\n      {\n        json: 'mutableOnCxlRpl',\n        js: 'mutableOnCxlRpl',\n        typ: unionMembers(undefined, ''),\n      },\n      { json: 'revertOnCxlRpl', js: 'revertOnCxlRpl', typ: unionMembers(undefined, '') },\n      { json: 'precision', js: 'precision', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  PurpleParameter: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('FluffyAttributes')),\n      },\n    ],\n    false\n  ),\n  FluffyAttributes: obj(\n    [\n      { json: 'fixTag', js: 'fixTag', typ: unionMembers(undefined, '') },\n      { json: 'name', js: 'name', typ: unionMembers(undefined, '') },\n      { json: 'use', js: 'use', typ: unionMembers(undefined, ref('Use')) },\n      { json: 'type', js: 'type', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  Regions: obj(\n    [\n      {\n        json: 'Region',\n        js: 'Region',\n        typ: unionMembers(undefined, arrItems(ref('Region'))),\n      },\n    ],\n    false\n  ),\n  Region: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('RegionAttributes')),\n      },\n    ],\n    false\n  ),\n  RegionAttributes: obj(\n    [\n      { json: 'name', js: 'name', typ: unionMembers(undefined, '') },\n      { json: 'inclusion', js: 'inclusion', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  StrategyEdit: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('StrategyEditAttributes')),\n      },\n      { json: 'Edit', js: 'Edit', typ: unionMembers(undefined, ref('StrategyEditEdit')) },\n    ],\n    false\n  ),\n  StrategyEditEdit: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('StickyAttributes')),\n      },\n      {\n        json: 'Edit',\n        js: 'Edit',\n        typ: unionMembers(undefined, arrItems(ref('EditElement'))),\n      },\n    ],\n    false\n  ),\n  EditElement: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('TentacledAttributes')),\n      },\n    ],\n    false\n  ),\n  TentacledAttributes: obj(\n    [\n      { json: 'field', js: 'field', typ: unionMembers(undefined, '') },\n      { json: 'operator', js: 'operator', typ: unionMembers(undefined, '') },\n      { json: 'field2', js: 'field2', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  StickyAttributes: obj(\n    [{ json: 'logicOperator', js: 'logicOperator', typ: unionMembers(undefined, '') }],\n    false\n  ),\n  StrategyEditAttributes: obj(\n    [{ json: 'errorMessage', js: 'errorMessage', typ: unionMembers(undefined, '') }],\n    false\n  ),\n  StrategyLayout: obj(\n    [\n      {\n        json: 'StrategyPanel',\n        js: 'StrategyPanel',\n        typ: unionMembers(undefined, ref('StrategyLayoutStrategyPanel')),\n      },\n    ],\n    false\n  ),\n  StrategyLayoutStrategyPanel: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('StrategyPanelAttributes')),\n      },\n      {\n        json: 'StrategyPanel',\n        js: 'StrategyPanel',\n        typ: unionMembers(undefined, ref('StrategyPanelStrategyPanel')),\n      },\n    ],\n    false\n  ),\n  StrategyPanelStrategyPanel: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('StrategyPanelAttributes')),\n      },\n      {\n        json: 'Control',\n        js: 'Control',\n        typ: unionMembers(undefined, arrItems(ref('Control'))),\n      },\n    ],\n    false\n  ),\n  Control: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('ControlAttributes')),\n      },\n      {\n        json: 'ListItem',\n        js: 'ListItem',\n        typ: unionMembers(undefined, arrItems(ref('ListItem'))),\n      },\n    ],\n    false\n  ),\n  ListItem: obj(\n    [\n      {\n        json: '_attributes',\n        js: '_attributes',\n        typ: unionMembers(undefined, ref('ListItemAttributes')),\n      },\n    ],\n    false\n  ),\n  ListItemAttributes: obj(\n    [\n      { json: 'enumID', js: 'enumID', typ: unionMembers(undefined, '') },\n      { json: 'uiRep', js: 'uiRep', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  ControlAttributes: obj(\n    [\n      { json: 'type', js: 'type', typ: unionMembers(undefined, '') },\n      { json: 'ID', js: 'ID', typ: unionMembers(undefined, '') },\n      { json: 'parameterRef', js: 'parameterRef', typ: unionMembers(undefined, '') },\n      { json: 'tooltip', js: 'tooltip', typ: unionMembers(undefined, '') },\n      { json: 'label', js: 'label', typ: unionMembers(undefined, '') },\n      { json: 'initValue', js: 'initValue', typ: unionMembers(undefined, '') },\n      { json: 'orientation', js: 'orientation', typ: unionMembers(undefined, '') },\n      { json: 'innerIncrement', js: 'innerIncrement', typ: unionMembers(undefined, '') },\n      { json: 'outerIncrement', js: 'outerIncrement', typ: unionMembers(undefined, '') },\n      { json: 'increment', js: 'increment', typ: unionMembers(undefined, '') },\n      { json: 'initPolicy', js: 'initPolicy', typ: unionMembers(undefined, '') },\n      { json: 'initFixField', js: 'initFixField', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  StrategyPanelAttributes: obj(\n    [\n      { json: 'orientation', js: 'orientation', typ: unionMembers(undefined, '') },\n      { json: 'border', js: 'border', typ: unionMembers(undefined, '') },\n      { json: 'collapsed', js: 'collapsed', typ: unionMembers(undefined, '') },\n      { json: 'collapsible', js: 'collapsible', typ: unionMembers(undefined, '') },\n      { json: 'title', js: 'title', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  StrategyAttributes: obj(\n    [\n      { json: 'name', js: 'name', typ: unionMembers(undefined, '') },\n      { json: 'uiRep', js: 'uiRep', typ: unionMembers(undefined, '') },\n      { json: 'wireValue', js: 'wireValue', typ: unionMembers(undefined, '') },\n      { json: 'providerID', js: 'providerID', typ: unionMembers(undefined, '') },\n      { json: 'version', js: 'version', typ: unionMembers(undefined, '') },\n      { json: 'fixMsgType', js: 'fixMsgType', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  StrategiesAttributes: obj(\n    [\n      { json: 'xmlns:lay', js: 'xmlns:lay', typ: unionMembers(undefined, '') },\n      { json: 'xmlns:val', js: 'xmlns:val', typ: unionMembers(undefined, '') },\n      { json: 'xmlns:flow', js: 'xmlns:flow', typ: unionMembers(undefined, '') },\n      { json: 'xmlns:xsi', js: 'xmlns:xsi', typ: unionMembers(undefined, '') },\n      {\n        json: 'strategyIdentifierTag',\n        js: 'strategyIdentifierTag',\n        typ: unionMembers(undefined, ''),\n      },\n      {\n        json: 'versionIdentifierTag',\n        js: 'versionIdentifierTag',\n        typ: unionMembers(undefined, ''),\n      },\n      {\n        json: 'changeStrategyOnCxlRpl',\n        js: 'changeStrategyOnCxlRpl',\n        typ: unionMembers(undefined, ''),\n      },\n      { json: 'xmlns', js: 'xmlns', typ: unionMembers(undefined, '') },\n      { json: 'schemaLocation', js: 'schemaLocation', typ: unionMembers(undefined, '') },\n    ],\n    false\n  ),\n  Use: ['optional', 'required'],\n};\n","export const sampleFIXatdl = `<Strategies xmlns:lay=\"http://www.fixprotocol.org/FIXatdl-1-1/Layout\">\n<Strategy name=\"Tazer 2\" uiRep=\"Strategy\" wireValue=\"4000\" fixMsgType=\"A\">\n    <Parameter name=\"EffectiveTime\" xsi:type=\"UTCTimestamp_t\" fixTag=\"168\"/>\n    <Parameter name=\"VolTarget\" xsi:type=\"Percentage_t\" fixTag=\"7641\" minValue=\"0.01\" maxValue=\"0.75\"/>\n    <lay:StrategyLayout>\n        <lay:StrategyPanel>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n        </lay:StrategyPanel>\n    </lay:StrategyLayout>\n</Strategy>\n<Strategy name=\"Tazer\" uiRep=\"Strategy\" wireValue=\"3000\" fixMsgType=\"D\">\n    <Parameter name=\"EffectiveTime\" xsi:type=\"UTCTimestamp_t\" fixTag=\"168\"/>\n    <Parameter name=\"VolTarget\" xsi:type=\"Percentage_t\" fixTag=\"7641\" minValue=\"0.01\" maxValue=\"0.75\"/>\n    <lay:StrategyLayout>\n        <lay:StrategyPanel>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:SingleSpinner_t\" ID=\"VolSpinner\" label=\"Target (1-75%)\" parameterRef=\"VolTarget\"/>\n        </lay:StrategyPanel>\n        <lay:StrategyPanel>\n            <lay:Control xsi:type=\"lay:Clock_t\" ID=\"StartTimeClock\" label=\"Start Time\" parameterRef=\"EffectiveTime\"/>\n            <lay:Control xsi:type=\"lay:SingleSpinner_t\" ID=\"VolSpinner\" label=\"Target (1-75%)\" parameterRef=\"VolTarget\"/>\n        </lay:StrategyPanel>\n    </lay:StrategyLayout>\n</Strategy>\n</Strategies>`;\n","import React, { useState, Fragment } from 'react';\nimport { Row, Col, Layout, Button, message, Input } from 'antd';\n\nimport { FIXatdl } from './FIXatdl';\nimport { Convert } from './FIXatdl/utility/model.utils';\n\nimport { sampleFIXatdl } from './FIXatdl/resource/atdl-simple-example';\n\nconst App = () => {\n  const [json, setJson] = useState('');\n  const [xml, setXml] = useState('');\n\n  const setXml2Json = (xml: string) => {\n    let result = '';\n    try {\n      result = Convert.toJson(xml);\n    } catch {\n      message.error('Error parsing FIXatdl XML');\n    }\n    setJson(result);\n  };\n\n  const onChange = (event: any) => {\n    setXml(event.target.value);\n  };\n\n  const buildWidget = () => {\n    setXml2Json('');\n    setXml2Json(xml || sampleFIXatdl);\n  };\n\n  return (\n    <Layout>\n      <Layout.Header>\n        <h3 style={{ color: '#FFF' }}>FIXatdl 2 React Widget</h3>\n      </Layout.Header>\n      <Layout.Content\n        style={{\n          height: 'calc(100vh - 64px)',\n          padding: '24px 50px',\n          overflow: 'auto',\n        }}>\n        <Row gutter={24} style={{ maxWidth: 1200, margin: '0 auto', width: '100%' }}>\n          <Col span={14}>\n            <FIXatdlTexarea onChange={onChange} />\n          </Col>\n          <Col span={10}>\n            <Button\n              onClick={buildWidget}\n              type=\"primary\"\n              size=\"large\"\n              block\n              style={{ marginBottom: 16, marginTop: 22 }}>\n              Build Widget\n            </Button>\n            <FIXatdl atdlJson={json} />\n            <ValidateOutput onSubmit={() => {}} />\n          </Col>\n        </Row>\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport const ValidateOutput = ({ onSubmit }: any) => {\n  const [state, setState] = useState('');\n  const buildFixMsg = (msg = {}) => {\n    return '8=FIX.4.2|9=51|35=0|34=703|49=ABC|52=20100130-10:53:40.830|56=XYZ|10=249|';\n  };\n  const handleClick = () => {\n    const sampleJsonMsg = {};\n    const fixMsg = buildFixMsg(sampleJsonMsg);\n    setState(fixMsg);\n    onSubmit();\n  };\n  return (\n    <Row style={{ marginTop: 24 }} gutter={12}>\n      <Col span={8}>\n        <Button onClick={handleClick} block>\n          Validate Output\n        </Button>\n      </Col>\n      <Col span={16}>\n        <Input value={state} readOnly placeholder=\"FIX Message\" />\n      </Col>\n    </Row>\n  );\n};\n\nexport const FIXatdl2Json = ({ data = '' }) => (\n  <Fragment>\n    <strong>FIXatdl JSON</strong> <br />\n    <pre\n      style={{\n        height: 150,\n        fontSize: 10,\n        background: '#333',\n        color: '#FFF',\n        padding: 8,\n      }}>\n      {data}\n    </pre>\n  </Fragment>\n);\n\nexport const FIXatdlTexarea: React.FC<any> = ({ value, onChange }) => {\n  const { TextArea } = Input;\n  return (\n    <Fragment>\n      <strong>FIXatdl XML</strong> <br />\n      <TextArea\n        defaultValue={sampleFIXatdl}\n        style={{ height: '80vh', marginBottom: 16 }}\n        onChange={onChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}